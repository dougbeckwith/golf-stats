{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dougc\\\\Desktop\\\\codeing\\\\projects\\\\portfolio-projects\\\\golf-stats\\\\client\\\\src\\\\pages\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from 'react';\nimport { faCheck, faTimes, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'; // start with lower or uppercase letter followed by 3-23 characters lower or uppercase digits hypens or underscores\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/; // one lowercase one uppercase one didgit one special chacater 8-24 characters\n\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\nconst REGISTER_URL = '/register';\n\nconst Register = () => {\n  _s();\n\n  const userRef = useRef();\n  const errRef = useRef();\n  const [user, setUser] = useState('');\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false); // Set focus on the username input\n\n  useEffect(() => {\n    userRef.current.focus();\n  }, []); // Set validName state when user input changes\n\n  useEffect(() => {\n    setValidName(USER_REGEX.test(user));\n  }, [user]); // Set validPwd and ValidMatch state when the two password inputs change\n\n  useEffect(() => {\n    setValidPwd(PWD_REGEX.test(pwd));\n    setValidMatch(pwd === matchPwd);\n  }, [pwd, matchPwd]); // Clear the error message anytime the state changes\n\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd, matchPwd]);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // if button enabled with JS hack\n\n    const v1 = USER_REGEX.test(user);\n    const v2 = PWD_REGEX.test(pwd);\n\n    if (!v1 || !v2) {\n      setErrMsg('Invalid Entry');\n      return;\n    }\n\n    try {\n      const response = await axios.post(REGISTER_URL, JSON.stringify({\n        user,\n        pwd\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      console.log(response === null || response === void 0 ? void 0 : response.data);\n      console.log(response === null || response === void 0 ? void 0 : response.accessToken);\n      console.log(JSON.stringify(response));\n      setSuccess(true); //clear state and controlled inputs\n      //need value attrib on inputs for this\n\n      setUser('');\n      setPwd('');\n      setMatchPwd('');\n    } catch (err) {\n      var _err$response;\n\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg('No Server Response');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 409) {\n        setErrMsg('Username Taken');\n      } else {\n        setErrMsg('Registration Failed');\n      }\n\n      errRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Success!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          onChange: e => setUser(e.target.value),\n          value: user,\n          required: true,\n          onFocus: () => setUserFocus(true),\n          onBlur: () => setUserFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"uidnote\",\n          className: userFocus && user && !validName ? 'instructions' : 'offscreen',\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), \"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), \"Letters, numbers, underscores, hyphens allowed.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validPwd ? 'valid' : 'hide'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validPwd || !pwd ? 'hide' : 'invalid'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: e => setPwd(e.target.value),\n          value: pwd,\n          required: true,\n          \"aria-invalid\": validPwd ? 'false' : 'true',\n          \"aria-describedby\": \"pwdnote\",\n          onFocus: () => setPwdFocus(true),\n          onBlur: () => setPwdFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"pwdnote\",\n          className: pwdFocus && !validPwd ? 'instructions' : 'offscreen',\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), \"8 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), \"Must include uppercase and lowercase letters, a number and a special character.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), \"Allowed special characters:\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"exclamation mark\",\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"at symbol\",\n            children: \"@\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"hashtag\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"dollar sign\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"percent\",\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm_pwd\",\n          children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validMatch && matchPwd ? 'valid' : 'hide'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validMatch || !matchPwd ? 'hide' : 'invalid'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm_pwd\",\n          onChange: e => setMatchPwd(e.target.value),\n          value: matchPwd,\n          required: true,\n          \"aria-invalid\": validMatch ? 'false' : 'true',\n          \"aria-describedby\": \"confirmnote\",\n          onFocus: () => setMatchFocus(true),\n          onBlur: () => setMatchFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"confirmnote\",\n          className: matchFocus && !validMatch ? 'instructions' : 'offscreen',\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), \"Must match the first password input field.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !validName || !validPwd || !validMatch ? true : false,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already registered?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"K2L7L9cVkNc42S3paB9KBpe33pw=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useRef","useState","useEffect","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","axios","Link","USER_REGEX","PWD_REGEX","REGISTER_URL","Register","userRef","errRef","user","setUser","validName","setValidName","userFocus","setUserFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","success","setSuccess","current","focus","test","handleSubmit","e","preventDefault","v1","v2","response","post","JSON","stringify","headers","withCredentials","console","log","data","accessToken","err","status","target","value"],"sources":["C:/Users/dougc/Desktop/codeing/projects/portfolio-projects/golf-stats/client/src/pages/Register.jsx"],"sourcesContent":["import {useRef, useState, useEffect} from 'react'\r\nimport {faCheck, faTimes, faInfoCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\n\r\n// start with lower or uppercase letter followed by 3-23 characters lower or uppercase digits hypens or underscores\r\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/\r\n// one lowercase one uppercase one didgit one special chacater 8-24 characters\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/\r\nconst REGISTER_URL = '/register'\r\n\r\nconst Register = () => {\r\n  const userRef = useRef()\r\n  const errRef = useRef()\r\n\r\n  const [user, setUser] = useState('')\r\n  const [validName, setValidName] = useState(false)\r\n  const [userFocus, setUserFocus] = useState(false)\r\n\r\n  const [pwd, setPwd] = useState('')\r\n  const [validPwd, setValidPwd] = useState(false)\r\n  const [pwdFocus, setPwdFocus] = useState(false)\r\n\r\n  const [matchPwd, setMatchPwd] = useState('')\r\n  const [validMatch, setValidMatch] = useState(false)\r\n  const [matchFocus, setMatchFocus] = useState(false)\r\n\r\n  const [errMsg, setErrMsg] = useState('')\r\n  const [success, setSuccess] = useState(false)\r\n\r\n  // Set focus on the username input\r\n  useEffect(() => {\r\n    userRef.current.focus()\r\n  }, [])\r\n\r\n  // Set validName state when user input changes\r\n  useEffect(() => {\r\n    setValidName(USER_REGEX.test(user))\r\n  }, [user])\r\n\r\n  // Set validPwd and ValidMatch state when the two password inputs change\r\n  useEffect(() => {\r\n    setValidPwd(PWD_REGEX.test(pwd))\r\n    setValidMatch(pwd === matchPwd)\r\n  }, [pwd, matchPwd])\r\n\r\n  // Clear the error message anytime the state changes\r\n  useEffect(() => {\r\n    setErrMsg('')\r\n  }, [user, pwd, matchPwd])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    // if button enabled with JS hack\r\n    const v1 = USER_REGEX.test(user)\r\n    const v2 = PWD_REGEX.test(pwd)\r\n    if (!v1 || !v2) {\r\n      setErrMsg('Invalid Entry')\r\n      return\r\n    }\r\n    try {\r\n      const response = await axios.post(\r\n        REGISTER_URL,\r\n        JSON.stringify({user, pwd}),\r\n        {\r\n          headers: {'Content-Type': 'application/json'},\r\n          withCredentials: true,\r\n        }\r\n      )\r\n      console.log(response?.data)\r\n      console.log(response?.accessToken)\r\n      console.log(JSON.stringify(response))\r\n      setSuccess(true)\r\n      //clear state and controlled inputs\r\n      //need value attrib on inputs for this\r\n      setUser('')\r\n      setPwd('')\r\n      setMatchPwd('')\r\n    } catch (err) {\r\n      if (!err?.response) {\r\n        setErrMsg('No Server Response')\r\n      } else if (err.response?.status === 409) {\r\n        setErrMsg('Username Taken')\r\n      } else {\r\n        setErrMsg('Registration Failed')\r\n      }\r\n      errRef.current.focus()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {success ? (\r\n        <section>\r\n          <h1>Success!</h1>\r\n          <p>\r\n            <Link to='/login'>\r\n              <button>Login</button>\r\n            </Link>\r\n          </p>\r\n        </section>\r\n      ) : (\r\n        <section>\r\n          <h1>Register</h1>\r\n          <form onSubmit={handleSubmit}>\r\n            <label htmlFor='username'>Username:</label>\r\n            <input\r\n              type='text'\r\n              id='username'\r\n              onChange={(e) => setUser(e.target.value)}\r\n              value={user}\r\n              required\r\n              onFocus={() => setUserFocus(true)}\r\n              onBlur={() => setUserFocus(false)}\r\n            />\r\n            <p\r\n              id='uidnote'\r\n              className={\r\n                userFocus && user && !validName ? 'instructions' : 'offscreen'\r\n              }>\r\n              <FontAwesomeIcon icon={faInfoCircle} />\r\n              4 to 24 characters.\r\n              <br />\r\n              Must begin with a letter.\r\n              <br />\r\n              Letters, numbers, underscores, hyphens allowed.\r\n            </p>\r\n\r\n            <label htmlFor='password'>\r\n              Password:\r\n              <FontAwesomeIcon\r\n                icon={faCheck}\r\n                className={validPwd ? 'valid' : 'hide'}\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faTimes}\r\n                className={validPwd || !pwd ? 'hide' : 'invalid'}\r\n              />\r\n            </label>\r\n            <input\r\n              type='password'\r\n              id='password'\r\n              onChange={(e) => setPwd(e.target.value)}\r\n              value={pwd}\r\n              required\r\n              aria-invalid={validPwd ? 'false' : 'true'}\r\n              aria-describedby='pwdnote'\r\n              onFocus={() => setPwdFocus(true)}\r\n              onBlur={() => setPwdFocus(false)}\r\n            />\r\n            <p\r\n              id='pwdnote'\r\n              className={pwdFocus && !validPwd ? 'instructions' : 'offscreen'}>\r\n              <FontAwesomeIcon icon={faInfoCircle} />\r\n              8 to 24 characters.\r\n              <br />\r\n              Must include uppercase and lowercase letters, a number and a\r\n              special character.\r\n              <br />\r\n              Allowed special characters:{' '}\r\n              <span aria-label='exclamation mark'>!</span>{' '}\r\n              <span aria-label='at symbol'>@</span>{' '}\r\n              <span aria-label='hashtag'>#</span>{' '}\r\n              <span aria-label='dollar sign'>$</span>{' '}\r\n              <span aria-label='percent'>%</span>\r\n            </p>\r\n\r\n            <label htmlFor='confirm_pwd'>\r\n              Confirm Password:\r\n              <FontAwesomeIcon\r\n                icon={faCheck}\r\n                className={validMatch && matchPwd ? 'valid' : 'hide'}\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faTimes}\r\n                className={validMatch || !matchPwd ? 'hide' : 'invalid'}\r\n              />\r\n            </label>\r\n            <input\r\n              type='password'\r\n              id='confirm_pwd'\r\n              onChange={(e) => setMatchPwd(e.target.value)}\r\n              value={matchPwd}\r\n              required\r\n              aria-invalid={validMatch ? 'false' : 'true'}\r\n              aria-describedby='confirmnote'\r\n              onFocus={() => setMatchFocus(true)}\r\n              onBlur={() => setMatchFocus(false)}\r\n            />\r\n            <p\r\n              id='confirmnote'\r\n              className={\r\n                matchFocus && !validMatch ? 'instructions' : 'offscreen'\r\n              }>\r\n              <FontAwesomeIcon icon={faInfoCircle} />\r\n              Must match the first password input field.\r\n            </p>\r\n\r\n            <button\r\n              disabled={!validName || !validPwd || !validMatch ? true : false}>\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n          <p>\r\n            Already registered?\r\n            <br />\r\n            <span className='line'>\r\n              {/*put router link here*/}\r\n              <Link to='/login'>\r\n                <button>Login</button>\r\n              </Link>\r\n            </span>\r\n          </p>\r\n        </section>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}